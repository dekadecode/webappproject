<!-- View Resolver implemented as a bean -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd">
 
 	<!-- Getting the context package where the controllers and codes are located. -->
	<context:component-scan base-package="com.ecommerce" />
 	
 	<!--  Telling the database properties username/password etc has to be read from this properties
 	<context:property-placeholder location="classpath:database.properties"/>
	-->
 	
 	<!--  Specifying the Resource location to load JSP, CSS, Images, etc-->
 	<mvc:resources location="/css/" mapping="/css/**"  />
 	<mvc:resources location="/fonts/" mapping="/fonts/**"  />
    <mvc:resources location="/images/" mapping="/images/**"  />
    <mvc:resources location="/include/" mapping="/include/**"  />
    <mvc:resources location="/js/" mapping="/js/**" />
    <!--  This is to mention that this is the annotation driven -->
 	<mvc:annotation-driven/>
 	
 	<!--  View Resolver. There are other view resolvers. Here we mention the one we are using -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- Database Source Specifications . This is referenced from the .properties file -->
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/userdb?verifyServerCertificate=false&amp;useSSL=true"></property>
		<property name="username" value="root"></property>
		<property name="password" value="admin123"></property>
	</bean>
	
	<!-- Hibernate SessionFactory related properties -->
	<bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" id="sessionFactory">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.default.schema">USERDB</prop>	<!-- MySQL schema -->
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.ecommerce.Member</value>		<!-- POJO object -->
			</list>
		</property>
		<property name="packagesToScan" value="com.ecommerce"></property>
	</bean>

	<!--Transaction-->
	<bean class="org.springframework.orm.hibernate5.HibernateTransactionManager" id="transactionManager"> <!-- Manages all CRUD operations from the service layer -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- Mention that the Transactions are based on the Annotation. You can mention it as a xml driven -->
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
	
</beans>
